import unittest
from my_list import MyList

class MyListTestCase(unittest.TestCase):
    def test_print_sorted(self):
        # Test case 1: List with unique integers
        my_list = MyList([1, 4, 2, 3, 5])
        sorted_list = [1, 2, 3, 4, 5]
        
        with captured_output() as (out, err):
            my_list.print_sorted()
        
        output = out.getvalue().strip()
        expected_output = str(sorted_list)
        self.assertEqual(output, expected_output)
        self.assertEqual(my_list, [1, 4, 2, 3, 5])

        # Test case 2: List with duplicate integers
        my_list = MyList([3, 1, 4, 2, 3])
        sorted_list = [1, 2, 3, 3, 4]
        
        with captured_output() as (out, err):
            my_list.print_sorted()
        
        output = out.getvalue().strip()
        expected_output = str(sorted_list)
        self.assertEqual(output, expected_output)
        self.assertEqual(my_list, [3, 1, 4, 2, 3])
        
        # Test case 3: Empty list
        my_list = MyList([])
        sorted_list = []
        
        with captured_output() as (out, err):
            my_list.print_sorted()
        
        output = out.getvalue().strip()
        expected_output = str(sorted_list)
        self.assertEqual(output, expected_output)
        self.assertEqual(my_list, [])

if __name__ == '__main__':
    unittest.main()
